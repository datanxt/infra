name: Nightly Build & Publish (Shared)

on:
  workflow_call:
    inputs:
      target_repository_file:
        description: 'Path to the file holding image repository name'
        required: false
        type: string
        default: '.github/workflows/target_repository'

jobs:
  read-target-repository-file:
    runs-on: ubuntu-latest
    outputs:
      repository: ${{ steps.read-repo.outputs.repo }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read target repository
        id: read-repo
        run: |
          FILE="${{ inputs.target_repository_file }}"

          if [[ ! -f "$FILE" ]]; then
            echo "::error::Required file '$FILE' not found."
            exit 1
          fi

          REPO="$(sed -e 's/^[[:space:]]*//;s/[[:space:]]*$//' "$FILE")"

          if [[ -z "$REPO" ]]; then
            echo "::error::File '$FILE' is empty or whitespace only."
            exit 1
          fi

          echo "Target repository: $REPO"

          echo "repo=$REPO" >> $GITHUB_OUTPUT

  determine-date-tag:
    runs-on: ubuntu-latest
    needs: read-target-repository-file
    outputs:
      date-tag: ${{ steps.date-tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Determine date tag for build
        id: date-tag
        run: |
          DATE_TAG="$(date +%Y-%m-%d)"

          echo "tag=$DATE_TAG" >> $GITHUB_OUTPUT

  test:
    needs: [read-target-repository-file, determine-date-tag]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create test results directory
        run: |
          mkdir -p test-results

      - name: Run tests with coverage
        run: |
          python -m pytest -v --tb=short --cov=. --cov-report=xml --cov-report=term-missing --junitxml=test-results/junit.xml || echo "No tests found - this is expected for now"

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: "test-results/junit.xml"

  build-and-push:
    needs: [read-target-repository-file, determine-date-tag, test]
    uses: datanxt/infra/.github/workflows/reusable-docker-publish-multi-tag.yml@main
    with:
      repository: ${{ needs.read-target-repository-file.outputs.repository }}
      tag: "nightly,${{ needs.determine-date-tag.outputs.date-tag }}" 
