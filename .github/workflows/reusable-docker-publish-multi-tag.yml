# .github/workflows/reusable-docker-publish.yml
name: Reusable Docker Publish for multiple tags

on:
  workflow_call:
    inputs:
      repository:
        required: true
        type: string
        description: "Repository name (e.g., 'mcp_server')"
      tag:
        required: false
        type: string
        description: "Single tag or comma-separated list of tags (e.g., 'latest' or 'latest,2024-01-15')"
        default: latest
      registry:
        required: false
        type: string
        description: "Docker registry (default: ghcr.io)"
        default: ghcr.io
      organization:
        required: false
        type: string
        description: "Organization name (default: datanxt)"
        default: datanxt

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to registry
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Parse and validate tags
        id: parse-tags
        run: |
          # Parse input tags
          INPUT_TAGS="${{ inputs.tag }}"
          
          # Split by comma and clean up whitespace
          IFS=',' read -ra TAG_ARRAY <<< "$INPUT_TAGS"
          
          # Clean up each tag (remove whitespace)
          CLEANED_TAGS=()
          for tag in "${TAG_ARRAY[@]}"; do
            CLEANED_TAG=$(echo "$tag" | xargs)  # Remove leading/trailing whitespace
            if [[ -n "$CLEANED_TAG" ]]; then
              CLEANED_TAGS+=("$CLEANED_TAG")
            fi
          done
          
          # Validate we have at least one tag
          if [[ ${#CLEANED_TAGS[@]} -eq 0 ]]; then
            echo "❌ Error: No valid tags provided"
            exit 1
          fi
          
          # Build full image names
          FULL_TAGS=()
          for tag in "${CLEANED_TAGS[@]}"; do
            FULL_TAG="${{ inputs.registry }}/${{ inputs.organization }}/${{ inputs.repository }}:$tag"
            FULL_TAGS+=("$FULL_TAG")
          done
          
          # Join tags for docker build action
          TAGS_STRING=$(IFS=','; echo "${FULL_TAGS[*]}")
          
          echo "📋 Parsed tags:"
          for i in "${!CLEANED_TAGS[@]}"; do
            echo "  $((i+1)). ${CLEANED_TAGS[$i]} → ${FULL_TAGS[$i]}"
          done
          
          echo "tags=$TAGS_STRING" >> $GITHUB_OUTPUT
          echo "tag-count=${#CLEANED_TAGS[@]}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.parse-tags.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Publish summary for built image
        run: |
          REPO="${{ inputs.registry }}/${{ inputs.organization }}/${{ inputs.repository }}"
          TAGS_RAW="${{ inputs.tag }}"
          # Convert comma-separated into array
          IFS=',' read -ra TAG_LIST <<< "$TAGS_RAW"
          
          echo "### ✅ Docker Images Built & Pushed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Field       | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|-------------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| **Repository** | \`${REPO}\` |" >> $GITHUB_STEP_SUMMARY
          echo "| **Tags**       | \`${TAGS_RAW}\` |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "You can pull the images with the following commands:" >> $GITHUB_STEP_SUMMARY
          
          for tag in "${TAG_LIST[@]}"; do
            # Trim whitespace if needed
            trimmed_tag="$(echo "$tag" | xargs)"
            echo '```bash' >> $GITHUB_STEP_SUMMARY
            echo "docker pull ${REPO}:${trimmed_tag}" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          done

